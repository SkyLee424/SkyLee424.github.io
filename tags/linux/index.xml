<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Sky_Lee 的个人博客</title>
    <link>https://blogs.skylee.top/tags/linux/</link>
    <description>Recent content in Linux on Sky_Lee 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Sky_Lee</copyright>
    <lastBuildDate>Thu, 08 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blogs.skylee.top/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Network IO</title>
      <link>https://blogs.skylee.top/posts/os/%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/note/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/os/%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/note/</guid>
      <description>为什么要有 DMA？ 传统的方式，要发送一个数据包，实现方式如下： 用户调用 read，读取待发送的数据 用户调用 write，写入待发送的数据 图片来自</description>
    </item>
    <item>
      <title>OS 进程管理</title>
      <link>https://blogs.skylee.top/posts/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/note/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/os/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/note/</guid>
      <description>一个进程最多创建多少个线程？ 由于每个线程都有自己独立的栈空间，因此，创建的线程数量会受到栈空间大小的限制 我们使用 ulimit -s 查看栈的大小： [root@localhost test]# ulimit -s 8192</description>
    </item>
    <item>
      <title>Linux File System</title>
      <link>https://blogs.skylee.top/posts/os/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/note/</link>
      <pubDate>Wed, 07 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/os/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/note/</guid>
      <description>本文讨论的都是 Ext 系列的文件系统 基本组成 Linux 的每个文件都有两个基本结构： 索引节点 inode 目录项 dentry inode 记录了一个文件的元数据，包括：文件类型、权限、所有者</description>
    </item>
    <item>
      <title>OS 内存管理</title>
      <link>https://blogs.skylee.top/posts/os/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/note/</link>
      <pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/os/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/note/</guid>
      <description>虚拟内存 为什么要有虚拟内存？ 如果每个进程都直接操作物理内存，存在安全问题：一个进程可以操作另一个进程的内存空间 对于单片机而言，采用的就是直接</description>
    </item>
    <item>
      <title>Linux Hardware</title>
      <link>https://blogs.skylee.top/posts/os/%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/note/</link>
      <pubDate>Sat, 03 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/os/%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/note/</guid>
      <description>32 位 CPU 最大只能操作 4G 内存吗？ 两个基本概念： CPU 位宽 地址总线 位宽 地址总线： 如果地址总线只有 1 条，只能表示：0、1 两种地址 如果地址总线有 2 条，能表</description>
    </item>
    <item>
      <title>Linux 多线程</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E5%A4%9A%E7%BA%BF%E7%A8%8B/note/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E5%A4%9A%E7%BA%BF%E7%A8%8B/note/</guid>
      <description>Linux 线程概念 在 Linux 系统中，进程实际上是由线程来实现的，没有独立的、与线程完全分离的进程实体。实际上，进程可以被视为线程的容器，线程是进程的执行单</description>
    </item>
    <item>
      <title>Linux 守护进程</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/note/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/note/</guid>
      <description>守护进程（Daemon Process）是在 后台运行 的一种特殊类型的进程。它独立于终端会话，并且在系统启动时启动，并持续运行以提供特定的服务或</description>
    </item>
    <item>
      <title>Linux 进程信号</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E4%BF%A1%E5%8F%B7/note/</link>
      <pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E4%BF%A1%E5%8F%B7/note/</guid>
      <description>查看信号列表的方式 可以使用 kill -l指令查看信号列表： 信号的产生 通过终端按键产生信号 常见的按键组合和相应的信号： Ctrl+C (SIGINT): 发送SIGINT信号 Ctrl+(SIGQUIT): 发送S</description>
    </item>
    <item>
      <title>Linux 进程通信</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/note/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/note/</guid>
      <description>管道 管道是一种特殊的进程间通信机制，它可以用于将一个进程的输出直接传递给另一个进程的输入，从而实现它们之间的数据传输。 匿名管道 pipe 系统调用 pi</description>
    </item>
    <item>
      <title>Linux 基础 IO</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E5%9F%BA%E7%A1%80-io/note/</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E5%9F%BA%E7%A1%80-io/note/</guid>
      <description>文件描述符（fd） 文件描述符（File Descriptor）是一个用于标识和操作打开文件的整数值。在UNIX和类UNIX操作系统中，文件描述</description>
    </item>
    <item>
      <title>Linux 进程控制</title>
      <link>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/note/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/linux/linux-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/note/</guid>
      <description>fork 在 C 语言中，fork 函数是一个创建新进程的系统调用。它通过复制当前进程创建一个新的子进程，使得父进程和子进程在不同的执行路径上同时运行。 fork</description>
    </item>
  </channel>
</rss>
