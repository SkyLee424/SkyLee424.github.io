<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP on Sky_Lee 的个人博客</title>
    <link>https://blogs.skylee.top/tags/tcp/</link>
    <description>Recent content in TCP on Sky_Lee 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Sky_Lee</copyright>
    <lastBuildDate>Sun, 28 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blogs.skylee.top/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP 杂项知识点</title>
      <link>https://blogs.skylee.top/posts/network/tcp/%E6%9D%82%E9%A1%B9/note/</link>
      <pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/network/tcp/%E6%9D%82%E9%A1%B9/note/</guid>
      <description>如何理解 TCP 面向字节流？ 由于 TCP 的滑动窗口机制（发送窗口会动态变化），在发送数据时，原数据可能发生分片 举个例子：原数据为一个字符串 &amp;ldquo;114514&amp;rdquo; 经过分片后，</description>
    </item>
    <item>
      <title>TCP 的优化</title>
      <link>https://blogs.skylee.top/posts/network/tcp/tcp-%E7%9A%84%E4%BC%98%E5%8C%96/note/</link>
      <pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/network/tcp/tcp-%E7%9A%84%E4%BC%98%E5%8C%96/note/</guid>
      <description>TCP 三次握手优化 客户端 客户端优化的手段主要是控制 SYN 报文的重传次数 比如，在公司内网，或者服务之间相互调用，不需要多次重传（网络环境比较好），就可</description>
    </item>
    <item>
      <title>TCP 的半连接队列和全连接队列</title>
      <link>https://blogs.skylee.top/posts/network/tcp/tcp-%E7%9A%84%E5%8D%8A%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97%E5%92%8C%E5%85%A8%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97/note/</link>
      <pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/network/tcp/tcp-%E7%9A%84%E5%8D%8A%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97%E5%92%8C%E5%85%A8%E8%BF%9E%E6%8E%A5%E9%98%9F%E5%88%97/note/</guid>
      <description>什么是半连接队列？什么是全连接队列？ 半连接队列是指：用于存储处于 SYN_RECV 状态的连接的队列 当内核收到一个 SYN 报文，就将该连接放到半连接队列，并发送 ACK 给</description>
    </item>
    <item>
      <title>TCP 三次握手/四次挥手</title>
      <link>https://blogs.skylee.top/posts/network/tcp/tcp-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B-%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/note/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/network/tcp/tcp-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B-%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/note/</guid>
      <description>TCP 基本认识 什么是 TCP ？ TCP 是一种 面向连接、可靠、基于字节流的协议 什么是 TCP 连接？ Socket + Seq + WindowSize Socket：IP + Port Seq：序列号 WindowSize</description>
    </item>
    <item>
      <title>TCP 重传机制、滑动窗口、流量控制、拥塞控制</title>
      <link>https://blogs.skylee.top/posts/network/tcp/tcp-%E9%87%8D%E4%BC%A0%E6%9C%BA%E5%88%B6%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8B%A5%E5%A1%9E%E7%AA%97%E5%8F%A3%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/note/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/network/tcp/tcp-%E9%87%8D%E4%BC%A0%E6%9C%BA%E5%88%B6%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8B%A5%E5%A1%9E%E7%AA%97%E5%8F%A3%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/note/</guid>
      <description>重传机制 超时重传 发送完一个 TCP 报文后，发送方会启动重传计时器 若在超时时间内，都没有收到 ack，就会触发超时重传，以保证可靠传输 重传时间 RTO 的确定</description>
    </item>
  </channel>
</rss>
