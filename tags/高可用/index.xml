<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>高可用 on Sky_Lee 的个人博客</title>
    <link>https://blogs.skylee.top/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/</link>
    <description>Recent content in 高可用 on Sky_Lee 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Sky_Lee</copyright>
    <lastBuildDate>Sun, 10 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blogs.skylee.top/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis 集群</title>
      <link>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E9%9B%86%E7%BE%A4/note/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E9%9B%86%E7%BE%A4/note/</guid>
      <description>为什么要使用 Redis 集群 前面的文章 提到了基于 哨兵集群 的「一主多从」模型 这种模型实际上也是一种 Redis 集群，优点如下： 实现数据的冗余备份 基于故障转移，可以</description>
    </item>
    <item>
      <title>Redis 主从复制（同步）</title>
      <link>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%90%8C%E6%AD%A5/note/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%90%8C%E6%AD%A5/note/</guid>
      <description>介绍 Redis 主从复制（同步）是指将一个 Redis 服务器的数据复制（同步）到多个 Redis 服务器的过程。这样，当主服务器出现故障时，其他从服务器可以接管其工作，从而</description>
    </item>
    <item>
      <title>Redis 哨兵</title>
      <link>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E5%93%A8%E5%85%B5/note/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8/%E5%93%A8%E5%85%B5/note/</guid>
      <description>为什么要有哨兵 Redis 哨兵主要负责： 集群健康状态监测 集群故障转移 通知 可以说，Redis 的高可用离不开哨兵 如何判断主节点故障 主观下线 前面提到，哨兵具</description>
    </item>
    <item>
      <title>MySQL 主从复制、读写分离、分库分表</title>
      <link>https://blogs.skylee.top/posts/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E4%B8%8E%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/note/</link>
      <pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blogs.skylee.top/posts/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E4%B8%8E%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/note/</guid>
      <description>主从复制 常见主从模型 常见的主从模型有以下几种： 一主一从 一主多从 互为主从 主从复制原理 简单来说，就是从库的 IO_Thread 将主库发来的 binlog 写到本地的 relay log，然</description>
    </item>
  </channel>
</rss>
